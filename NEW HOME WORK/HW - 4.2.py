# 1) У вас есть список my_list с значениями типа int.
# Распечатать те значения, которые больше 100.
# Задание выполнить с помощью цикла for.
############## Вариант 1 ###########
my_list1 = [100, 1, 5, 200, 13, 225, 101, 55, 303, 555]
result1 = []
for value in my_list1:
    value = int(value)
    if value > 100:
        my_list1 = result1.append(int(value))
print(result1)
########## Вариант 2 ###########
my_list1 = [100, 1, 5, 200, 13, 225, 101, 55, 303, 555]
for value in my_list1:
     if int(value) > 100:
         print(value)
     else:
         None


# 2) У вас есть список my_list с значениями типа int, и пустой список my_results.
# Добавить в my_results те значения, которые больше 100.
# Распечатать список my_results.
# Задание выполнить с помощью цикла for.
##########################
my_list2 = [100, 1, 5, 200, 13, 225, 101, 55, 303, 555]
my_results2 = []
for value in my_list2:
    value = int(value)
    if value > 100:
        my_list2 = my_results2.append(value)
    else:
        None
print(my_results2)

# 3) У вас есть список my_list с значениями типа int.
# Если в my_list количество элементов меньше 2, то в конец добавить значение 0.
# Если количество элементов больше или равно 2, то добавить сумму последних двух элементов.
# Количество элементов в списке можно получить с помощью функции len(my_list)
#########################
my_list3 = [100, 200, 300, 2, 4, 2]
if len(my_list3) < 2:
    my_list3.append(0)
else:
    my_list3.append(int(my_list3[-2] + my_list3[-1]))
print(my_list3)


# 4) Пользователь вводит value - число с запятой (например 3.14) с клавиатуры.
# Вы приводите это value к типу float и выводите результат выражения value ** -1.
# Написать программу, которая вычисляет данное выражение и
# корректно обрабатывает возможные исключения.
###########################
value4 = input('Введите число')
try:
    value4 = float(value4)
    result4 = value4 ** -1
    print(result4)
except ValueError:
    print('Некорктно ввели число')
except ZeroDivisionError:
    print('на ноль мы не возводим')


# 5) У вас есть список значений my_list и список индексов my_indexes
# (начинается с нуля и количество элементов совпадает с количеством в my_list.
# Распечатать значения из my_list через обращение по индексу. См. пример выше.
##################
my_list5 = [100, 1, 5, 200, 13, 225, 101, 55, 303, 555]
my_indexes5 = [0, 1, 2, 3, 5, 4, 6, 7, 8, 9]
for index in my_indexes5:
	print(my_list5[index])

# 6) У вас есть два списка my_list_1 и my_list_2 равной длинны и
# список индексов my_indexes (начинается с нуля и количество элементов
# совпадает с количеством в my_list_1.
# Распечатать пары значений из my_list_1 и my_list_2 через обращение по индексу.
# Например для списков [1, 3] и [2, 4]:
# (1, 2)
# (3, 4)
################
my_list6_1 = [100, 1, 5, 200, 13, 225, 101, 55, 303, 400]
my_list6_2 = [200, 2, 10, 400, 26, 450, 202, 110, 606, 800]
my_indexes6 = [0, 1, 2, 3, 5, 4, 6, 7, 8, 9]
for index in my_indexes6:
    print(my_list6_1[index], my_list6_2[index], "\n-----")


#####################################################
# Еще один пример - вложенные циклы (цикл в цикле).
# my_string_1 = "12"
# my_string_2 = "34"
# for symb_1 in my_string_1:
# 	for symb_2 in my_string_2:
# 		print(symb_1 + symb_2)
#
# Результат:
# "13"	# перебирается все элементы из my_string_2 для элемента "1" из my_string_1
# "14"
# "23"	# перебирается все элементы из my_string_2 для элемента "2" из my_string_1
# "24"
# #####################################################
#
# 7) У вас есть строка my_string = '0123456789'.
# Сгенерировать целые числа (тип int) от 0 до 99 и поместить их в список.
# Задание нужно выполнить ТОЛЬКО через цикл в цикле(См. пример выше) и приведение типов .
# Генерирование через range или другие "фишки" я засчитывать не буду )
my_string6 = '0123456789'
my_result6 = []
for i6_1 in my_string6:
    for i6_2 in my_string6:
        my_result6.append(int(i6_1 + i6_2))
print(my_result6)